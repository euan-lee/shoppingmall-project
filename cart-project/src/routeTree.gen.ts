/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OrderDetailsRouteImport } from './routes/_OrderDetails/route'
import { Route as OrderPaymentRouteImport } from './routes/OrderPayment/route'
import { Route as CartRouteImport } from './routes/Cart/route'
import { Route as ProductsParamsIdImport } from './routes/Products/$ParamsId'
import { Route as OrdersLayoutImport } from './routes/Orders/layout'
import { Route as OrdersOrdersImport } from './routes/Orders/Orders'
import { Route as OrderDetailsOrderDetailsOrderIdImport } from './routes/_OrderDetails/OrderDetails.$OrderId'

// Create Virtual Routes

const OrdersRouteLazyImport = createFileRoute('/Orders')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const OrdersRouteLazyRoute = OrdersRouteLazyImport.update({
  path: '/Orders',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/Orders/route.lazy').then((d) => d.Route))

const OrderDetailsRouteRoute = OrderDetailsRouteImport.update({
  id: '/_OrderDetails',
  getParentRoute: () => rootRoute,
} as any)

const OrderPaymentRouteRoute = OrderPaymentRouteImport.update({
  path: '/OrderPayment',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/OrderPayment/route.lazy').then((d) => d.Route),
)

const CartRouteRoute = CartRouteImport.update({
  path: '/Cart',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/Cart/route.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProductsParamsIdRoute = ProductsParamsIdImport.update({
  path: '/Products/$ParamsId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/Products/$ParamsId.lazy').then((d) => d.Route),
)

const OrdersLayoutRoute = OrdersLayoutImport.update({
  path: '/layout',
  getParentRoute: () => OrdersRouteLazyRoute,
} as any)

const OrdersOrdersRoute = OrdersOrdersImport.update({
  path: '/Orders',
  getParentRoute: () => OrdersRouteLazyRoute,
} as any)

const OrderDetailsOrderDetailsOrderIdRoute =
  OrderDetailsOrderDetailsOrderIdImport.update({
    path: '/OrderDetails/$OrderId',
    getParentRoute: () => OrderDetailsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/Cart': {
      id: '/Cart'
      path: '/Cart'
      fullPath: '/Cart'
      preLoaderRoute: typeof CartRouteImport
      parentRoute: typeof rootRoute
    }
    '/OrderPayment': {
      id: '/OrderPayment'
      path: '/OrderPayment'
      fullPath: '/OrderPayment'
      preLoaderRoute: typeof OrderPaymentRouteImport
      parentRoute: typeof rootRoute
    }
    '/_OrderDetails': {
      id: '/_OrderDetails'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof OrderDetailsRouteImport
      parentRoute: typeof rootRoute
    }
    '/Orders': {
      id: '/Orders'
      path: '/Orders'
      fullPath: '/Orders'
      preLoaderRoute: typeof OrdersRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/Orders/Orders': {
      id: '/Orders/Orders'
      path: '/Orders'
      fullPath: '/Orders/Orders'
      preLoaderRoute: typeof OrdersOrdersImport
      parentRoute: typeof OrdersRouteLazyImport
    }
    '/Orders/layout': {
      id: '/Orders/layout'
      path: '/layout'
      fullPath: '/Orders/layout'
      preLoaderRoute: typeof OrdersLayoutImport
      parentRoute: typeof OrdersRouteLazyImport
    }
    '/Products/$ParamsId': {
      id: '/Products/$ParamsId'
      path: '/Products/$ParamsId'
      fullPath: '/Products/$ParamsId'
      preLoaderRoute: typeof ProductsParamsIdImport
      parentRoute: typeof rootRoute
    }
    '/_OrderDetails/OrderDetails/$OrderId': {
      id: '/_OrderDetails/OrderDetails/$OrderId'
      path: '/OrderDetails/$OrderId'
      fullPath: '/OrderDetails/$OrderId'
      preLoaderRoute: typeof OrderDetailsOrderDetailsOrderIdImport
      parentRoute: typeof OrderDetailsRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  CartRouteRoute,
  OrderPaymentRouteRoute,
  OrderDetailsRouteRoute: OrderDetailsRouteRoute.addChildren({
    OrderDetailsOrderDetailsOrderIdRoute,
  }),
  OrdersRouteLazyRoute: OrdersRouteLazyRoute.addChildren({
    OrdersOrdersRoute,
    OrdersLayoutRoute,
  }),
  ProductsParamsIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/Cart",
        "/OrderPayment",
        "/_OrderDetails",
        "/Orders",
        "/Products/$ParamsId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/Cart": {
      "filePath": "Cart/route.tsx"
    },
    "/OrderPayment": {
      "filePath": "OrderPayment/route.tsx"
    },
    "/_OrderDetails": {
      "filePath": "_OrderDetails/route.tsx",
      "children": [
        "/_OrderDetails/OrderDetails/$OrderId"
      ]
    },
    "/Orders": {
      "filePath": "Orders/route.lazy.tsx",
      "children": [
        "/Orders/Orders",
        "/Orders/layout"
      ]
    },
    "/Orders/Orders": {
      "filePath": "Orders/Orders.tsx",
      "parent": "/Orders"
    },
    "/Orders/layout": {
      "filePath": "Orders/layout.tsx",
      "parent": "/Orders"
    },
    "/Products/$ParamsId": {
      "filePath": "Products/$ParamsId.tsx"
    },
    "/_OrderDetails/OrderDetails/$OrderId": {
      "filePath": "_OrderDetails/OrderDetails.$OrderId.tsx",
      "parent": "/_OrderDetails"
    }
  }
}
ROUTE_MANIFEST_END */
